{
  "version": 3,
  "sources": ["../../src/models/ShopifyCustomer.ts"],
  "sourcesContent": ["// All the generated types for the \"Shopify Customer\" model preconditions, actions, params, etc\nimport { AmbientContext } from \"../AmbientContext\";\nimport { ActionExecutionScope, NotYetTyped, ValidationErrors, ActionTrigger } from \"../types\";\nimport { GadgetRecord, ShopifyCustomer } from \"@gadget-client/kaghati-shopify-v3\";\nimport { Select } from \"@gadgetinc/api-client-core\";\nexport type DefaultShopifyCustomerServerSelection = {\n  readonly __typename: true;\n      readonly id: true;\n      readonly createdAt: true;\n      readonly updatedAt: true;\n      readonly mergeable: false;\n      readonly statistics: true;\n      readonly acceptsMarketing: true;\n      readonly acceptsMarketingUpdatedAt: true;\n      readonly addresses: false;\n      readonly shopifyCreatedAt: true;\n      readonly currency: true;\n      readonly defaultAddressId: true;\n    readonly defaultAddress: false;\n      readonly email: true;\n      readonly emailMarketingConsent: true;\n      readonly firstName: true;\n      readonly lastName: true;\n      readonly lastOrderName: true;\n      readonly marketingOptInLevel: true;\n      readonly metafield: true;\n      readonly multipassIdentifier: true;\n      readonly note: true;\n      readonly draftOrders: false;\n      readonly orders: false;\n      readonly ordersCount: true;\n      readonly paymentMethods: false;\n      readonly phone: true;\n      readonly smsMarketingConsent: true;\n      readonly shopifyState: true;\n      readonly tags: true;\n      readonly taxExempt: true;\n      readonly taxExemptions: true;\n      readonly totalSpent: true;\n      readonly shopifyUpdatedAt: true;\n      readonly verifiedEmail: true;\n      readonly lastOrderId: true;\n    readonly lastOrder: false;\n      readonly shopId: true;\n    readonly shop: false;\n  };\n\n  \n/** All the data passed to an effect or precondition within the `create` action on the `shopifyCustomer` model. */\nexport interface CreateShopifyCustomerActionContext extends AmbientContext {\n  /**\n  * The model of the record this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * The `shopifyCustomer` record this action is operating on.\n  */\n  record: GadgetRecord<Select<ShopifyCustomer, DefaultShopifyCustomerServerSelection>>;\n  /**\n  * An object passed between all preconditions and effects of an action execution at the `scope` property.\n  * Useful for transferring data between effects.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object describing what started this action execution.\n  */\n  trigger: ActionTrigger;\n  /**\n  * An object containing all the incoming params that have been defined for this action. Includes params added by any triggers, as well as custom params defined in the action.\n  */\n  params: {\n\n};\n  /**\n  * The context of this action. This context does not have a defined inner context.\n  */\n  context: CreateShopifyCustomerActionContext;\n};\n\n\n    \n/** All the data passed to an effect or precondition within the `update` action on the `shopifyCustomer` model. */\nexport interface UpdateShopifyCustomerActionContext extends AmbientContext {\n  /**\n  * The model of the record this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * The `shopifyCustomer` record this action is operating on.\n  */\n  record: GadgetRecord<Select<ShopifyCustomer, DefaultShopifyCustomerServerSelection>>;\n  /**\n  * An object passed between all preconditions and effects of an action execution at the `scope` property.\n  * Useful for transferring data between effects.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object describing what started this action execution.\n  */\n  trigger: ActionTrigger;\n  /**\n  * An object containing all the incoming params that have been defined for this action. Includes params added by any triggers, as well as custom params defined in the action.\n  */\n  params: {\n\n};\n  /**\n  * The context of this action. This context does not have a defined inner context.\n  */\n  context: UpdateShopifyCustomerActionContext;\n};\n\n\n    \n/** All the data passed to an effect or precondition within the `delete` action on the `shopifyCustomer` model. */\nexport interface DeleteShopifyCustomerActionContext extends AmbientContext {\n  /**\n  * The model of the record this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * The `shopifyCustomer` record this action is operating on.\n  */\n  record: GadgetRecord<Select<ShopifyCustomer, DefaultShopifyCustomerServerSelection>>;\n  /**\n  * An object passed between all preconditions and effects of an action execution at the `scope` property.\n  * Useful for transferring data between effects.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object describing what started this action execution.\n  */\n  trigger: ActionTrigger;\n  /**\n  * An object containing all the incoming params that have been defined for this action. Includes params added by any triggers, as well as custom params defined in the action.\n  */\n  params: {\n\n};\n  /**\n  * The context of this action. This context does not have a defined inner context.\n  */\n  context: DeleteShopifyCustomerActionContext;\n};\n\n\n  "],
  "mappings": "AA6EC;AAiCA;AAiCA;",
  "names": []
}
