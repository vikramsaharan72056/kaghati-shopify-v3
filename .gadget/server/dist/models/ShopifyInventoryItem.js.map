{
  "version": 3,
  "sources": ["../../src/models/ShopifyInventoryItem.ts"],
  "sourcesContent": ["// All the generated types for the \"Shopify Inventory Item\" model preconditions, actions, params, etc\nimport { AmbientContext } from \"../AmbientContext\";\nimport { ActionExecutionScope, NotYetTyped, ValidationErrors, ActionTrigger } from \"../types\";\nimport { GadgetRecord, ShopifyInventoryItem } from \"@gadget-client/kaghati-shopify-v3\";\nimport { Select } from \"@gadgetinc/api-client-core\";\nexport type DefaultShopifyInventoryItemServerSelection = {\n  readonly __typename: true;\n      readonly id: true;\n      readonly createdAt: true;\n      readonly updatedAt: true;\n      readonly fulfillmentOrderLineItem: false;\n      readonly productVariant: false;\n      readonly cost: true;\n      readonly countryCodeOfOrigin: true;\n      readonly countryHarmonizedSystemCodes: true;\n      readonly shopifyCreatedAt: true;\n      readonly harmonizedSystemCode: true;\n      readonly provinceCodeOfOrigin: true;\n      readonly requiresShipping: true;\n      readonly sku: true;\n      readonly tracked: true;\n      readonly shopifyUpdatedAt: true;\n      readonly locations: false;\n      readonly shopId: true;\n    readonly shop: false;\n  };\n\n  \n/** All the data passed to an effect or precondition within the `create` action on the `shopifyInventoryItem` model. */\nexport interface CreateShopifyInventoryItemActionContext extends AmbientContext {\n  /**\n  * The model of the record this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * The `shopifyInventoryItem` record this action is operating on.\n  */\n  record: GadgetRecord<Select<ShopifyInventoryItem, DefaultShopifyInventoryItemServerSelection>>;\n  /**\n  * An object passed between all preconditions and effects of an action execution at the `scope` property.\n  * Useful for transferring data between effects.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object describing what started this action execution.\n  */\n  trigger: ActionTrigger;\n  /**\n  * An object containing all the incoming params that have been defined for this action. Includes params added by any triggers, as well as custom params defined in the action.\n  */\n  params: {\n\n};\n  /**\n  * The context of this action. This context does not have a defined inner context.\n  */\n  context: CreateShopifyInventoryItemActionContext;\n};\n\n\n    \n/** All the data passed to an effect or precondition within the `update` action on the `shopifyInventoryItem` model. */\nexport interface UpdateShopifyInventoryItemActionContext extends AmbientContext {\n  /**\n  * The model of the record this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * The `shopifyInventoryItem` record this action is operating on.\n  */\n  record: GadgetRecord<Select<ShopifyInventoryItem, DefaultShopifyInventoryItemServerSelection>>;\n  /**\n  * An object passed between all preconditions and effects of an action execution at the `scope` property.\n  * Useful for transferring data between effects.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object describing what started this action execution.\n  */\n  trigger: ActionTrigger;\n  /**\n  * An object containing all the incoming params that have been defined for this action. Includes params added by any triggers, as well as custom params defined in the action.\n  */\n  params: {\n\n};\n  /**\n  * The context of this action. This context does not have a defined inner context.\n  */\n  context: UpdateShopifyInventoryItemActionContext;\n};\n\n\n    \n/** All the data passed to an effect or precondition within the `delete` action on the `shopifyInventoryItem` model. */\nexport interface DeleteShopifyInventoryItemActionContext extends AmbientContext {\n  /**\n  * The model of the record this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * The `shopifyInventoryItem` record this action is operating on.\n  */\n  record: GadgetRecord<Select<ShopifyInventoryItem, DefaultShopifyInventoryItemServerSelection>>;\n  /**\n  * An object passed between all preconditions and effects of an action execution at the `scope` property.\n  * Useful for transferring data between effects.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object describing what started this action execution.\n  */\n  trigger: ActionTrigger;\n  /**\n  * An object containing all the incoming params that have been defined for this action. Includes params added by any triggers, as well as custom params defined in the action.\n  */\n  params: {\n\n};\n  /**\n  * The context of this action. This context does not have a defined inner context.\n  */\n  context: DeleteShopifyInventoryItemActionContext;\n};\n\n\n  "],
  "mappings": "AAyDC;AAiCA;AAiCA;",
  "names": []
}
