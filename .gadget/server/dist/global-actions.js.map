{
  "version": 3,
  "sources": ["../src/global-actions.ts"],
  "sourcesContent": ["import type { AmbientContext } from \"./AmbientContext\";\nimport type { ActionTrigger, ActionExecutionScope } from \"./types\";\n\n/** All the data passed to an effect or precondition within the `globalShopifySync` global action. */\nexport interface GlobalShopifySyncGlobalActionContext extends AmbientContext {\n  /**\n  * An object passed between all preconditions and effects of an action execution at the `scope` property.\n  * Useful for transferring data between effects, or returning data from this global action by setting `scope.result`.\n  * For global actions, `scope.result` is returned to the client at the end of action execution.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object containing all the incoming params that have been defined for this global action. Includes params added by any triggers, as well as custom params defined in the action.\n  */\n  params: {\n\n};\n  /**\n  * An object describing what started this action execution.\n  */\n  trigger: ActionTrigger;\n  /**\n  * The context of this global action. This context does not have a defined inner context.\n  */\n  context: GlobalShopifySyncGlobalActionContext;\n};\n\n\n/** All the data passed to an effect or precondition within the `createProduct` global action. */\nexport interface CreateProductGlobalActionContext extends AmbientContext {\n  /**\n  * An object passed between all preconditions and effects of an action execution at the `scope` property.\n  * Useful for transferring data between effects, or returning data from this global action by setting `scope.result`.\n  * For global actions, `scope.result` is returned to the client at the end of action execution.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object containing all the incoming params that have been defined for this global action. Includes params added by any triggers, as well as custom params defined in the action.\n  */\n  params: {\n\n};\n  /**\n  * An object describing what started this action execution.\n  */\n  trigger: ActionTrigger;\n  /**\n  * The context of this global action. This context does not have a defined inner context.\n  */\n  context: CreateProductGlobalActionContext;\n};\n\n\n/** All the data passed to an effect or precondition within the `createOrder` global action. */\nexport interface CreateOrderGlobalActionContext extends AmbientContext {\n  /**\n  * An object passed between all preconditions and effects of an action execution at the `scope` property.\n  * Useful for transferring data between effects, or returning data from this global action by setting `scope.result`.\n  * For global actions, `scope.result` is returned to the client at the end of action execution.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object containing all the incoming params that have been defined for this global action. Includes params added by any triggers, as well as custom params defined in the action.\n  */\n  params: {\n\n};\n  /**\n  * An object describing what started this action execution.\n  */\n  trigger: ActionTrigger;\n  /**\n  * The context of this global action. This context does not have a defined inner context.\n  */\n  context: CreateOrderGlobalActionContext;\n};\n\n\n/** All the data passed to an effect or precondition within the `createCustomer` global action. */\nexport interface CreateCustomerGlobalActionContext extends AmbientContext {\n  /**\n  * An object passed between all preconditions and effects of an action execution at the `scope` property.\n  * Useful for transferring data between effects, or returning data from this global action by setting `scope.result`.\n  * For global actions, `scope.result` is returned to the client at the end of action execution.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object containing all the incoming params that have been defined for this global action. Includes params added by any triggers, as well as custom params defined in the action.\n  */\n  params: {\n\n};\n  /**\n  * An object describing what started this action execution.\n  */\n  trigger: ActionTrigger;\n  /**\n  * The context of this global action. This context does not have a defined inner context.\n  */\n  context: CreateCustomerGlobalActionContext;\n};\n\n\n"],
  "mappings": "AAyBC;AAyBA;AAyBA;AAyBA;",
  "names": []
}
